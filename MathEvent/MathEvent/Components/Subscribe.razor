@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using MathEvent.Models.ViewModels
@using MathEvent.Helpers
@using System.Net.Http
@using System.ComponentModel
@using Newtonsoft.Json
@using System.Text

@inject NavigationManager NavigationManager
@inject ClientService ClientService

<h6>Участников: @Count()</h6>
<input type="button" class="btn btn-block btn-success" @onclick="SignUp" value="@CurrentButtonValue()" />

@code {
    [Parameter] public PerformanceViewModel card { get; set; }
    [Parameter] public int traffic { get; set; }
    private HttpClient _client;

    protected override void OnInitialized()
    {
        _client = ClientService.Client;
    }

    protected async Task SignUp()
    {
        var model = JsonConvert.SerializeObject(card);
        var content = new StringContent(model, Encoding.UTF8, "application/json");

        if (!card.IsSignedUp)
        {
            traffic++;
            card.IsSignedUp = !card.IsSignedUp;
        }
        else
        {
            traffic--;
            card.IsSignedUp = !card.IsSignedUp;
        }

        var response = await _client.PostAsync("api/Subscribe/signup", content);
        Count();
    }

    protected int Count()
    {
        return traffic;
    }

    protected string CurrentButtonValue()
    {
        if (card.IsSignedUp)
        {
            return "Отписаться";
        }
        else
        {
            return "Записаться";
        }
    }
}