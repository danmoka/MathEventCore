@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using System.Net.Http
@using Newtonsoft.Json
@using MathEvent.Helpers
@using MathEvent.Models.ViewModels
@using System.Text
@using System.Net;
@using MathEvent.Helpers.StatusCode 

@inject ClientService ClientService
@inject NavigationManager NavigationManager
@inject StatusCodeResolver StatusCodeResolver

<input type="button" class="btn btn-block download-btn" @onclick="Download" value="Скачать материалы события" hidden="@(!_isActive)" />

@code {
    [Parameter] public PerformanceViewModel Performance { get; set; }
    private bool _isActive = false;
    private HttpClient _client;

    protected override async Task OnInitializedAsync()
    {
        _client = ClientService.Client;
        var model = JsonConvert.SerializeObject(Performance);
        var content = new StringContent(model, Encoding.UTF8, "application/json");
        var response = await _client.PostAsync("api/Proceedings/isFileExists", content);


        if (response.StatusCode == HttpStatusCode.OK)
        {
            var result = await response.Content.ReadAsStringAsync();
            _isActive = JsonConvert.DeserializeObject<bool>(result);
        }

        StatusCodeResolver.ResolveStatusCode(response.StatusCode, null);
    }

    protected void Download()
    {
        NavigationManager.NavigateTo($"/api/Proceedings/downloadProceedings?performanceId={Performance.Id}", true);
    }
}
